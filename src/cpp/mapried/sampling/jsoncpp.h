#pragma once

// File automatically generated by mapry. DO NOT EDIT OR APPEND!

#include <json/json.h>  // jsoncpp

#include <map>
#include <string>

#include "parse.h"
#include "types.h"

namespace mapried {
namespace sampling {

namespace jsoncpp {

/**
 * parses Sampling from a JSON value.
 *
 * @param [in] value to be parsed
 * @param [in] ref reference to the value (e.g., a reference path)
 * @param [out] target parsed Sampling
 * @param [out] errors encountered during parsing
 */
void sampling_from(
  const Json::Value& value,
  std::string ref,
  Sampling* target,
  parse::Errors* errors);

/**
 * parses Output from a JSON value.
 *
 * @param [in] value to be parsed
 * @param ref reference to the value (e.g., a reference path)
 * @param [out] target parsed data
 * @param [out] errors encountered during parsing
 */
void output_from(
  const Json::Value& value,
  std::string ref,
  Output* target,
  parse::Errors* errors);

/**
 * parses Input from a JSON value.
 *
 * @param [in] value to be parsed
 * @param ref reference to the value (e.g., a reference path)
 * @param [out] target parsed data
 * @param [out] errors encountered during parsing
 */
void input_from(
  const Json::Value& value,
  std::string ref,
  Input* target,
  parse::Errors* errors);


/**
 * serializes Sampling to a JSON value.
 *
 * @param sampling to be serialized
 * @return JSON value
 */
Json::Value serialize_sampling(
  const Sampling& sampling);

/**
 * serializes Input to a JSON value.
 *
 * @param input to be serialized
 * @return JSON value
 */
Json::Value serialize_input(
  const Input& input);

/**
 * serializes Output to a JSON value.
 *
 * @param output to be serialized
 * @return JSON value
 */
Json::Value serialize_output(
  const Output& output);

}  // namespace jsoncpp

}  // namespace sampling
}  // namespace mapried

// File automatically generated by mapry. DO NOT EDIT OR APPEND!
